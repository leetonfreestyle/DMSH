name: "leeton"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "/home/leeton/dataSet/NUS_72/train_lmdb"
    backend: LMDB
    batch_size: 200
  }
  transform_param {
    mirror: true
    crop_size:64
    mean_file: "/home/leeton/dataSet/NUS_72/mean.binaryproto"
  }
  include: { phase: TRAIN }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "/home/leeton/dataSet/NUS_72/test_lmdb"
    backend: LMDB
    batch_size: 200
  }
  transform_param {
    mirror: false
    crop_size:64
    mean_file: "/home/leeton/dataSet/NUS_72/mean.binaryproto"
  }
  include: { phase: TEST }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
# layer {
#     bottom: "pool1"
#     top: "pool1"
#     name: "bn1"
#     type: "BatchNorm"
#     batch_norm_param {
#         use_global_stats: false
#     }
#     param {
#         lr_mult: 0
#     }
#     param {
#         lr_mult: 0
#     }
#     param {
#         lr_mult: 0
#     }
# }
# layer {
#     bottom: "pool1"
#     top: "pool1"
#     name: "scale1"
#     type: "Scale"
#     scale_param {
#         bias_term: true
#     }
# }
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    norm_region: WITHIN_CHANNEL
    local_size: 3
    alpha: 5e-05
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
# layer {
#     bottom: "pool2"
#     top: "pool2"
#     name: "bn2"
#     type: "BatchNorm"
#     batch_norm_param {
#         use_global_stats: false
#     }
#     param {
#         lr_mult: 0
#     }
#     param {
#         lr_mult: 0
#     }
#     param {
#         lr_mult: 0
#     }
# }
# layer {
#     bottom: "pool2"
#     top: "pool2"
#     name: "scale2"
#     type: "Scale"
#     scale_param {
#         bias_term: true
#     }
# }
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "pool2"
  top: "pool2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    norm_region: WITHIN_CHANNEL
    local_size: 3
    alpha: 5e-05
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu_ip2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 24
    weight_filler {
#      type: "xavier"
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "HashingLoss"
  hashing_loss_param {
    bi_margin: 0.0
    tradeoff: 0.01
    nsim: 1
  }
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
layer {
  type: "Python"
  name: "loss"
  python_param {
    module: "wmap_loss_layer"
    layer: "WmapLossLayer"
  }
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include: { phase: TEST }
}
